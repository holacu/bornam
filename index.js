const MinecraftTelegramBot = require('./telegram-bot');
const HealthCheckServer = require('./health-check');
const logger = require('./logger');

// ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
require('dotenv').config();

// ุชููู ุจูุช ุงูุชูุบุฑุงู ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

// ูุนุฑูุงุช ุงูุฃุฏูู ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
const ADMIN_IDS = process.env.ADMIN_IDS
    ? process.env.ADMIN_IDS.split(',').map(id => parseInt(id.trim())).filter(id => !isNaN(id))
    : [];

class MinecraftBotSystem {
    constructor() {
        this.telegramBot = null;
        this.healthCheckServer = null;
        this.isRunning = false;
    }

    async start() {
        try {
            logger.info('๐ ุจุฏุก ุชุดุบูู ูุธุงู ุจูุช ูุงูููุฑุงูุช...');

            // ุจุฏุก ุชุดุบูู Health Check Server
            this.healthCheckServer = new HealthCheckServer();
            this.healthCheckServer.start();
            logger.info('๐ฅ ุชู ุชุดุบูู Health Check Server');

            // ุงูุชุญูู ูู ูุฌูุฏ ุงูุชููู
            if (!TELEGRAM_BOT_TOKEN || TELEGRAM_BOT_TOKEN === 'your_telegram_bot_token_here') {
                throw new Error('โ ูุฑุฌู ุฅุถุงูุฉ ุชููู ุจูุช ุงูุชูุบุฑุงู ูู ูุชุบูุฑ ุงูุจูุฆุฉ TELEGRAM_BOT_TOKEN');
            }

            // ุฅูุดุงุก ุจูุช ุงูุชูุบุฑุงู
            this.telegramBot = new MinecraftTelegramBot(TELEGRAM_BOT_TOKEN);

            // ุงูุชุธุงุฑ ุชููุฆุฉ ุงูุจูุช
            await new Promise(resolve => setTimeout(resolve, 2000));
            
            // ุฅุถุงูุฉ ุงูุฃุฏูู
            for (const adminId of ADMIN_IDS) {
                await this.telegramBot.addAdmin(adminId);
            }

            // ุชุญููู ุงูุฃุฏูู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
            await this.telegramBot.loadAdmins();

            this.isRunning = true;

            logger.info('โ ุชู ุชุดุบูู ุงููุธุงู ุจูุฌุงุญ!');
            logger.info('๐ฑ ุจูุช ุงูุชูุบุฑุงู ุฌุงูุฒ ููุงุณุชุฎุฏุงู');
            logger.info('๐ฎ ูููู ุงูุขู ุฅูุดุงุก ุจูุชุงุช ูุงูููุฑุงูุช Java ู Bedrock');
            logger.info('๐ ุงูููุฒุงุช ุงููุชุงุญุฉ:');
            logger.info('   โข ุฅูุดุงุก ุจูุชุงุช ูุงูููุฑุงูุช (Java & Bedrock)');
            logger.info('   โข ุฏุนู ุขุฎุฑ 5 ุฅุตุฏุงุฑุงุช ููู ููุน');
            logger.info('   โข ุงูุชุญูู ุงููุงูู ูู ุงูุจูุชุงุช (ุชุดุบูู/ุฅููุงู)');
            logger.info('   โข ุฅุฑุณุงู ุงูุฑุณุงุฆู ูุงูุฃูุงูุฑ');
            logger.info('   โข ูุฑุงูุจุฉ ุงูุฅุญุตุงุฆูุงุช');
            logger.info('   โข ูุงุฌูุฉ ุฅุฏุงุฑุฉ ููุฃุฏูู');
            logger.info('   โข ุฏุนู ุณูุฑูุฑุงุช Aternos ูุบูุฑูุง');
            logger.info('๐ง ููุญุตูู ุนูู ุงููุณุงุนุฏุฉุ ุงุณุชุฎุฏู ุงูุฃูุฑ /help ูู ุจูุช ุงูุชูุบุฑุงู');

        } catch (error) {
            logger.error('โ ุฎุทุฃ ูู ุชุดุบูู ุงููุธุงู:', { error: error.message, stack: error.stack });
            process.exit(1);
        }
    }

    async stop() {
        if (this.isRunning) {
            logger.info('๐ ุฅููุงู ุงููุธุงู...');

            // ุฅููุงู ุจูุช ุงูุชูุบุฑุงู
            if (this.telegramBot) {
                await this.telegramBot.shutdown();
                logger.info('๐ฑ ุชู ุฅููุงู ุจูุช ุงูุชูุบุฑุงู');
            }

            // ุฅููุงู Health Check Server
            if (this.healthCheckServer) {
                this.healthCheckServer.stop();
                logger.info('๐ฅ ุชู ุฅููุงู Health Check Server');
            }

            this.isRunning = false;
            logger.info('โ ุชู ุฅููุงู ุงููุธุงู ุจูุฌุงุญ');
        }
    }

    // ูุนุงูุฌุฉ ุฅุดุงุฑุงุช ุงููุธุงู ููุฅููุงู ุงูุขูู
    setupGracefulShutdown() {
        const signals = ['SIGINT', 'SIGTERM', 'SIGQUIT'];
        
        signals.forEach(signal => {
            process.on(signal, async () => {
                logger.info(`\n๐ก ุชู ุงุณุชูุจุงู ุฅุดุงุฑุฉ ${signal}`);
                await this.stop();
                process.exit(0);
            });
        });

        // ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ุบูุฑ ุงููุชููุนุฉ
        process.on('uncaughtException', async (error) => {
            logger.error('โ ุฎุทุฃ ุบูุฑ ูุชููุน:', { error: error.message, stack: error.stack });
            await this.stop();
            process.exit(1);
        });

        process.on('unhandledRejection', async (reason, promise) => {
            // ุชุฌุงูู ุฃุฎุทุงุก Telegram ุงูุนุงุฏูุฉ
            if (reason && reason.code === 'ETELEGRAM') {
                logger.warn('ุชุฌุงูู ุฎุทุฃ Telegram:', { code: reason.code, message: reason.message });
                return;
            }

            logger.error('โ Promise ูุฑููุถ:', { reason, promise });
            await this.stop();
            process.exit(1);
        });
    }
}

// ุฅูุดุงุก ูุชุดุบูู ุงููุธุงู
const system = new MinecraftBotSystem();

// ุฅุนุฏุงุฏ ุงูุฅููุงู ุงูุขูู
system.setupGracefulShutdown();

// ุจุฏุก ุงูุชุดุบูู
system.start().catch(error => {
    logger.error('โ ูุดู ูู ุชุดุบูู ุงููุธุงู:', { error: error.message, stack: error.stack });
    process.exit(1);
});

// ุชุตุฏูุฑ ุงููุธุงู ููุงุณุชุฎุฏุงู ุงูุฎุงุฑุฌู
module.exports = MinecraftBotSystem;
